{"name": "test_get_student_data_again1", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": ">   ???\n\nC:\\Users\\TT\\PycharmProjects\\REST Automation 1\\TestCases\\test_AddNewStudent.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nC:\\Users\\TT\\PycharmProjects\\REST Automation 1\\TestCases\\test_AddNewStudent.py:30: in test_get_student_data\n    ???\n..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\n..\\..\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n..\\..\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000002BB3CD795E0>\ns = '<!DOCTYPE html>\\r\\n<html>\\r\\n    <head>\\r\\n        <title>Runtime Error</title>\\r\\n        <meta name=\"viewport\" cont...    </tr>\\r\\n            </table>\\r\\n\\r\\n            <br>\\r\\n\\r\\n            </font>\\r\\n\\r\\n    </body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "stdout", "source": "4126703d-c171-4b62-9d09-513d8e35d5f6-attachment.txt", "type": "text/plain"}], "start": 1608055587529, "stop": 1608055588120, "uuid": "e6e34c95-c2a2-4550-9d04-c9c3ff601aae", "historyId": "ea7400dd1398473084c509442ec613e4", "testCaseId": "88135a135151907825135d62e1fa060a", "fullName": "TestCases.test_AddNewStudent#test_get_student_data_again1", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_AddNewStudent"}, {"name": "host", "value": "DESKTOP-NMI0QKM"}, {"name": "thread", "value": "6852-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_AddNewStudent"}]}